*dn-markdown-ftplugin.txt*    For Vim version 7.4        Last changed: 2015 May 01

Filetype plugin for markdown                         *dn-markdown-ftplugin*
                                                             *DNM_ftplugin*
Dn Markdown Filetype Plugin
-------------------------------------------------------------------------
                                                     *dn-markdown-contents*
1. Contents

     1. Contents .......................... |dn-markdown-contents|
     2. Overview .......................... |dn-markdown-overview|
     3. Installation ...................... |dn-markdown-install|
     4. Dependencies ...................... |dn-markdown-dependencies|
     5. Variables ......................... |dn-markdown-variables|
     6. Output functions .................. |dn-markdown-output|
     7. Viewing functions ................. |dn-markdown-view|
-------------------------------------------------------------------------
                                                     *dn-markdown-overview*
2. Overview

An auxiliary filetype plugin for the markdown language.

All functions in this library are global. They all have the prefix 'DNM_'
to try and avoid namespace collisions.

Some mappings are also provided.
-------------------------------------------------------------------------
                                                      *dn-markdown-install*
3. Installation

As this filetype plugin does not interfere with the standard markdown
filetype plugin, the load order of these ftplugins does not matter. To
account for future development, however, it is recommended that this
ftplugin is put in an 'after' directory.
-------------------------------------------------------------------------
                                                 *dn-markdown-dependencies*
4. Dependencies

This ftplugin requires the |dn-utils-plugin|.
-------------------------------------------------------------------------
                                                    *dn-markdown-variables*
5. Variables

This ftplugin uses the |b:dn-true| and |b:dn-false| variables provided by
|dn-utils-plugin|.

                                                         *dn-markdown-help*
This ftplugin contributes to the |dn-utils-plugin| help system (see |dn#util#help|
for details). In the help system navigate to: vim -> markdown ftplugin.
-------------------------------------------------------------------------
                                                       *dn-markdown-output*
6. Output functions

Functions enabling user to generate output. The pandoc utility is used to
generate output.

                                                *dn-markdown-generate-html*
The user can set a stylesheet to be used by using the 'DNM_SetHtmlStyle'
function, for example, calling the function from their vim configuration
file. The funcion must be called before generating output.

If the user does not specify a stylesheet a default stylesheet is used.
The default stylesheet is 'buttondown' by Ryan Gray (see
https://github.com/ryangray/buttondown).

                                                         *DNM_SetHtmlStyle*
DNM_SetHtmlStyle(style)
    purpose: specify the css stylesheet to be used
    params: 1 - stylesheet filepath
    insert: nil
    return: nil

If the user wants to create html output using a custom template, specify
it with the 'DNM_SetHtmlTemplate' function, for example, calling the
function from their vim configuration. The function must be called before
generating output.

                                                      *DNM_SetHtmlTemplate*
DNM_SetHtmlTemplate(template)
    purpose: specify the value to provide to the pandoc --template option
    params: 1 - template
    insert: nil
    return: nil

                                                      *dnm_pandoc_citeproc*
If the user wants to use the pandoc-citeproc filter to resolve citations,
set its inclusion in the pandoc command with the 'DNM_PandocCiteproc'
function. To remove the pandoc-citeproc filter, use the
'DNM_NoPandocCiteproc' function.

                                                       *DNM_PandocCiteproc*
DNM_PandocCiteproc()
    purpose: set flag to add '--filter pandoc-citeproc' to pandoc command
    params: nil
    return: nil
    note:   does not check that the pandoc-citeproc filter is installed

                                                     *DNM_NoPandocCiteproc*
DNM_NoPandocCiteproc()
    purpose: set flag to remove '--filter pandoc-citeproc' from pandoc
             command
    params: nil
    return: nil

When producing html output the following pandoc options are used:
'-t html5', '--standalone', and '--smart'. If set, the pandoc-citeproc
filter is also used. The function 'DNM_HtmlOutput' generates html output.

                                                           *DNM_HtmlOutput*
DNM_HtmlOutput()
    purpose: generate output file with html extension
    params:  nil
    insert:  nil
    return:  nil
    note:    output file has same basename as markdown script with
             '.html' extension
    note:    an existing output file will be silently overwritten


                                                            *dn-mapping-gh*
The 'DNM_HtmlOutput' function is mapped by default to '<LocalLeader>gh',
usually '\gh', in Insert and Normal modes.


                                                         *DNM_GenerateHTML*
The 'DNM_HtmlOutput' function is bound to the command 'GenerateHTML'.

                                                 *dn-markdown-generate-pdf*
If the user wants to create pdf output using a custom template, specify
it with the 'DNM_SetPdfTemplate' function, for example, calling the
function from their vim configuration The funcion must be called before
generating output. Pdf output uses the 'latex' template.

                                                       *DNM_SetPdfTemplate*
DNM_SetPdfTemplate(template)
    purpose: specify the value to provide to the pandoc --template option
    params: 1 - template
    insert: nil
    return: nil

When producing pdf output the following pandoc option is used: 'smart'.

The pandoc-citeproc filter can be used in generating pdf output in the
same way it is used in generating html output. See |dnm_pandoc_citeproc|
for details.

                                                            *DNM_PdfOutput*
DNM_PdfOutput()
    purpose: generate output file with pdf extension
    params:  nil
    insert:  nil
    return:  nil
    note:    uses lualatex
    note:    output file has same basename as markdown script with
             '.pdf' extension
    note:    an existing output file will be silently overwritten

                                                            *dn-mapping-gp*
The 'DNM_PdfOutput' function is mapped by default to '<LocalLeader>gp',
usually '\gp', in Insert and Normal modes.

                                                              *GeneratePDF*
The 'DNM_PdfOutput' function is bound to the command 'GeneratePDF'.

-------------------------------------------------------------------------
                                                         *dn-markdown-view*
7. Viewing functions

Functions enabling user to view output. The system default viewing
applications are used to display the output.

                                                             *DNM_ViewHtml*
DNM_ViewHtml()
    purpose: Display html output
    params:  nil
    insert:  nil
    return:  nil
    note:    uses system default application for html files

                                                            *dn-mapping-vh*
This function is mapped by default to '<LocalLeader>vh', usually '\vh',
in Insert and Normal modes.

                                                               *ViewHTML()*
This function is bound to command 'ViewHTML'.

                                                              *DNM_ViewPdf*
DNM_ViewPdf()
    purpose: Display pdf output
    params:  nil
    insert:  nil
    return:  nil
    note:    uses system default application for pdf files

                                                            *dn-mapping-vp*
This function is mapped by default to '<LocalLeader>vp', usually '\vp',
in Insert and Normal modes.
                                                                *ViewPDF()*
This function is bound to command 'ViewPDF'.

-------------------------------------------------------------------------
 vim:tw=78:fo=tcq2:ts=4:ft=help:
